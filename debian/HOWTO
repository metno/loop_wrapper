Short How-To from Heiko to Thomas on debianizing

The most important files for you are:

debian/control:  update once (or when you make large changes)
   Here you should add the packages you need after 'Depends:'. I only
added the standards: python. If you need additional packages, add them
there, i.e. if you need 'python-numpy', the line should look like:
   Depends: python-numpy, ${misc:Depends}, ${python:Depends}

debian/changelog:  update for each new version and platform
   Version information, the last number (-1) should be increase when you
change the packaging/dependencies without any code. The first version
should be the one of your script.

The other files are boiler-plate files, I set copyright to GPL-2/ change
if you like.


What you need to do when you create a new version:

*** COMMIT AND PUSH ALL CHANGES ***

*** RUN THE TESTSUITE on Precise and Trusty ***

a) update debian/changelog file
   the date is obtained by :r!date -R

b) commit and push!

c) do a 'git export' in /tmp, and remove the tests
   rm -rf /tmp/loop_wrapper/; mkdir /tmp/loop_wrapper/
   git archive master | tar -x -C /tmp/loop_wrapper/
   rm -rf /tmp/loop_wrapper/test

The remaining of the commands are wrt to /tmp/loop_wrapper/

d) create a tar file including version, excluding debian (so that others
are able to rebuild your package), e.g.
   cd /tmp
   v=`loop_wrapper/loop_wrapper -v 2>&1 | cut -f 2 -d ' '`; tar cvfz loop-wrapper_${v}.orig.tar.gz loop_wrapper --exclude debian

e) run debuild in loop_wrapper, creating all the package-files
   cd ./loop_wrapper
   debuild -us -uc

f) upload to our repos
   cd ..
   v=`loop_wrapper/loop_wrapper -v 2>&1 | cut -f 2 -d ' '`; dupload --to precise loop-wrapper_${v}-1_amd64.changes
   v=`loop_wrapper/loop_wrapper -v 2>&1 | cut -f 2 -d ' '`; dupload -f --to hardy loop-wrapper_${v}-1_amd64.changes

g) install new version from apt-get (wait a while... every 15mn?)
   sudo apt-get update
   apt-cache policy loop-wrapper
   sudo apt-get upgrade loop-wrapper

   installation on PPI requires an email to Nico.


see https://dokit.met.no/sysdok/linux/server/utviklingsspeil_reprepro

Package needs to be loop-wrapper, since debian doesn't allow _ in
package names.

